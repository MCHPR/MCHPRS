use std::collections::BTreeMap;
use std::fs::File;
use std::io::BufWriter;
use std::io::Write;

/// Results will be stored in `./state_machines.txt`
fn main() {
    let bitstream: Vec<bool> = "FTFTTTTFTFTFFTFTTFFFTTTTTFTFTTTFTFFTFFTTFTFFTTFFFFFFFTTFTFFTTFFTTTFTTTTFFTFFTFFFFTTTTFFFTFFFFFTTFTTTTTTTTTTFTFTFTFTFTTFFTTTFTFFTTFTFTFFTTTFFTFTTTTFTFFTFFTTFFFTTTFFFFFTTTTFTTFFFTTTTFFFTFTTTTTFFFFFTTTTFTFTFTTTTTFTFTTTFTFFFFTFTFFTTFFTTTTFTFFTTFFTTTTTFTTTTFFFFFFFTFTFFTFFFTTFFTFFFTTTFTFTTTFFFFFFTTFFFFTTTFFFTFFFFTTFFTTFFTTTFTFFTTTFFFFFFFTTFFFTTFFTFTFTFFFFTFTFFTFTTTTFTTFFFTTFTFTFTFFFFFFTTTTTFFTTFFTTTFTFTTTTTTFFFFTFTFFFFTFTTFTTFFFTFTTFTTTTFFTFTTTTFTFFFTTFTFTFTTTFFFFTFTTFTFFFFFFTTFFFFFTFFTTFTFFFTTTFTFFTTFTTFTTFTTTTFTFTFFFFTTTTTFFTFFFFTTFTTFFTTTFTFFTFTTFTTTFFFTTTTTFFFTFTTTTFFTTTTTTTTFTFFTTTFTFTFTFFTFTFFFTTTTFTTTFTTTTFTFTTFFFFTTTTTTTTFTTTTTFFFTTTTTFFTFFFFTFTFFFFFTFTTFTFTFTFTFTTTFTTTFTTFFFTTFFTFFFFTTFFFTFFFTFFTFFTFTTFFTFTFTFTTFFFTFFFFFTFFFTFFFFTFFFTTTFTFTFFTTFTTFFFTTTTFFTFFFFFFTFTTFTTTTTTTTFFFTTTFFTTFFTTFFTTFFFFFFFFTTTTTFFTTFTTTTFFTFFFTFFTTTFTFTTTTTTTTTFFFTFFTTTFFTFTTTTFFFTTFTTFTTFFTFTFTFFFFFFTFFFFFTFTTTFFFFTFFFTFTTFTFFTFFTFFFFTTTFFFFFTFFFFTTFFFFFFTTFTTFTFTTFFFTFFFTTTTTFFTFTTTFTTTTFTTTTFFFTFFFFFTF".chars().map(|c| c == 'T').collect();
    let mut output = vec![];
    let mut found = BTreeMap::new();

    const BITS: u32 = 4;
    for i in 0u32..(1 << (1 << BITS)) {
        let sm_num = i;

        // Construct the state machine from the current number
        let mut state_machine = [false; 16];
        let mut n = sm_num;
        for i in 0..state_machine.len() {
            state_machine[i] = n & 1 != 0;
            n >>= 1;
        }

        // Initialize the output and the memory bit
        output.clear();
        let mut output_bit = false;

        // Iterate through the input bitstream
        for window in bitstream.windows(3) {
            let mut input = 0u8;
            if output_bit {
                input |= 0b0001;
            }
            if window[0] {
                input |= 0b0010;
            }
            if window[1] {
                input |= 0b0100;
            }
            if window[2] {
                input |= 0b1000;
            }
            output_bit = state_machine[input as usize];

            output.push(output_bit);
        }

        // Print the resulting bitstream for this state machine
        let output_str: String = output.iter().map(|&b| if b { 'T' } else { 'F' }).collect();
        if let Some(name) = find_name(&output_str) {
            if !found.contains_key(name) {
                found.insert(name, vec![]);
                println!(
                    "{} | {:>10}, {:?}:  {}",
                    name, sm_num, state_machine, output_str
                );
            }
            found.get_mut(name).unwrap().push(sm_num);
        }
    }

    let file = File::create("./state_machines.txt").unwrap();
    let mut f = BufWriter::new(file);
    for (name, machines) in found.iter() {
        let mut table = String::new();
        let mut calced_t = " ".repeat(16).to_owned();
        let mut calced_f = " ".repeat(16).to_owned();
        let sample = machines[0];
        for input in 0u32..(1 << BITS) {
            let output = sample & (1 << input) != 0;
            let input: String = (0..BITS)
                .map(|i| input & (1 << i) != 0)
                .map(|b| if b { 'T' } else { 'F' })
                .collect();
            if output {
                calced_t = calced_t
                    .chars()
                    .zip(input.chars())
                    .map(|(a, b)| if a != ' ' && a != b { 'x' } else { b })
                    .collect();
            } else {
                calced_f = calced_f
                    .chars()
                    .zip(input.chars())
                    .map(|(a, b)| if a != ' ' && a != b { 'x' } else { b })
                    .collect();
            };
            table += &format!("{} => {}, ", input, if output { 'T' } else { 'F' });
        }

        let mut machines = machines.clone();
        machines.sort();
        writeln!(
            f,
            "{} ({:>9}): [{} => F, {} => T] {} = {:?}",
            name,
            machines.len(),
            calced_f,
            calced_t,
            table,
            machines
        )
        .unwrap();
    }
}

fn find_name(str: &str) -> Option<&'static str> {
    match str {
        "FTFTTTTFTFTFFTFTTFFFTTTTTFTFTTTFTFFTFFTTFTFFTTFFFFFFFTTFTFFTTFFTTTFTTTTFFTFFTFFFFTTTTFFFTFFFFFTTFTTTTTTTTTTFTFTFTFTFTTFFTTTFTFFTTFTFTFFTTTFFTFTTTTFTFFTFFTTFFFTTTFFFFFTTTTFTTFFFTTTTFFFTFTTTTTFFFFFTTTTFTFTFTTTTTFTFTTTFTFFFFTFTFFTTFFTTTTFTFFTTFFTTTTTFTTTTFFFFFFFTFTFFTFFFTTFFTFFFTTTFTFTTTFFFFFFTTFFFFTTTFFFTFFFFTTFFTTFFTTTFTFFTTTFFFFFFFTTFFFTTFFTFTFTFFFFTFTFFTFTTTTFTTFFFTTFTFTFTFFFFFFTTTTTFFTTFFTTTFTFTTTTTTFFFFTFTFFFFTFTTFTTFFFTFTTFTTTTFFTFTTTTFTFFFTTFTFTFTTTFFFFTFTTFTFFFFFFTTFFFFFTFFTTFTFFFTTTFTFFTTFTTFTTFTTTTFTFTFFFFTTTTTFFTFFFFTTFTTFFTTTFTFFTFTTFTTTFFFTTTTTFFFTFTTTTFFTTTTTTTTFTFFTTTFTFTFTFFTFTFFFTTTTFTTTFTTTTFTFTTFFFFTTTTTTTTFTTTTTFFFTTTTTFFTFFFFTFTFFFFFTFTTFTFTFTFTFTTTFTTTFTTFFFTTFFTFFFFTTFFFTFFFTFFTFFTFTTFFTFTFTFTTFFFTFFFFFTFFFTFFFFTFFFTTTFTFTFFTTFTTFFFTTTTFFTFFFFFFTFTTFTTTTTTTTFFFTTTFFTTFFTTFFTTFFFFFFFFTTTTTFFTTFTTTTFFTFFFTFFTTTFTFTTTTTTTTTFFFTFFTTTFFTFTTTTFFFTTFTTFTTFFTFTFTFFFFFFTFFFFFTFTTTFFFFTFFFTFTTFTFFTFFTFFFFTTTFFFFFTFFFFTTFFFFFFTTFTTFTFTTFFFTFFFTTTTTFFTFTTTFTTTTFTTTTFFFTFFFFF" /* TF */ => Some("1. P  "),
        "TFTFFFFTFTFTTFTFFTTTFFFFFTFTFFFTFTTFTTFFTFTTFFTTTTTTTFFTFTTFFTTFFFTFFFFTTFTTFTTTTFFFFTTTFTTTTTFFTFFFFFFFFFFTFTFTFTFTFFTTFFFTFTTFFTFTFTTFFFTTFTFFFFTFTTFTTFFTTTFFFTTTTTFFFFTFFTTTFFFFTTTFTFFFFFTTTTTFFFFTFTFTFFFFFTFTFFFTFTTTTFTFTTFFTTFFFFTFTTFFTTFFFFFTFFFFTTTTTTTFTFTTFTTTFFTTFTTTFFFTFTFFFTTTTTTFFTTTTFFFTTTFTTTTFFTTFFTTFFFTFTTFFFTTTTTTTFFTTTFFTTFTFTFTTTTFTFTTFTFFFFTFFTTTFFTFTFTFTTTTTTFFFFFTTFFTTFFFTFTFFFFFFTTTTFTFTTTTFTFFTFFTTTFTFFTFFFFTTFTFFFFTFTTTFFTFTFTFFFTTTTFTFFTFTTTTTTFFTTTTTFTTFFTFTTTFFFTFTTFFTFFTFFTFFFFTFTFTTTTFFFFFTTFTTTTFFTFFTTFFFTFTTFTFFTFFFTTTFFFFFTTTFTFFFFTTFFFFFFFFTFTTFFFTFTFTFTTFTFTTTFFFFTFFFTFFFFTFTFFTTTTFFFFFFFFTFFFFFTTTFFFFFTTFTTTTFTFTTTTTFTFFTFTFTFTFTFFFTFFFTFFTTTFFTTFTTTTFFTTTFTTTFTTFTTFTFFTTFTFTFTFFTTTFTTTTTFTTTFTTTTFTTTFFFTFTFTTFFTFFTTTFFFFTTFTTTTTTFTFFTFFFFFFFFTTTFFFTTFFTTFFTTFFTTTTTTTTFFFFFTTFFTFFFFTTFTTTFTTFFFTFTFFFFFFFFFTTTFTTFFFTTFTFFFFTTTFFTFFTFFTTFTFTFTTTTTTFTTTTTFTFFFTTTTFTTTFTFFTFTTFTTFTTTTFFFTTTTTFTTTTFFTTTTTTFFTFFTFTFFTTTFTTTFFFFFTTFTFFFTFFFFTFFFFTTTFTTTTT" /* FT */ => Some("2. Pn "),
        "FFFTTTTTTTTFFFFTTFFFTTTTTTTTTTTTTFFFFFTTTTFFTTFFFFFFFTTTTFFTTFFTTTTTTTTFFFFFFFFFFTTTTFFFFFFFFFTTTTTTTTTTTTTTTTTTTTTTTTFFTTTTTFFTTTTTTFFTTTFFFFTTTTTTFFFFFTTFFFTTTFFFFFTTTTTTTFFFTTTTFFFFFTTTTTFFFFFTTTTTTTTTTTTTTTTTTTTTTFFFFFFFFFTTFFTTTTTTFFTTFFTTTTTTTTTTFFFFFFFFFFFFFFFFTTFFFFFFTTTTTTTTTFFFFFFTTFFFFTTTFFFFFFFFTTFFTTFFTTTTTFFTTTFFFFFFFTTFFFTTFFFFFFFFFFFFFFFFFFTTTTTTTFFFTTTTTTTTFFFFFFTTTTTFFTTFFTTTTTTTTTTTTFFFFFFFFFFFFFTTTTTFFFFFTTTTTTTFFFFTTTTTTFFFTTTTTTTTTTFFFFFFTTTTFFFFFFTTFFFFFFFFTTTTFFFTTTTTFFTTTTTTTTTTTTTTTTTFFFFTTTTTFFFFFFFTTTTTFFTTTTTFFFFTTTTTTFFFTTTTTFFFFFTTTTFFTTTTTTTTTTFFTTTTTTTTTFFFFFFFFTTTTTTTTTTTTTTTTTTFFFFTTTTTTTTTTTTTTFFFTTTTTFFFFFFFFFFFFFFFFFTTTTTTTTTTTTTTTTTTTTTFFFTTFFFFFFFTTFFFFFFFFFFFFFFFTTFFFFFFFFTTFFFFFFFFFFFFFFFFFFFFFFTTTTTTTFFTTTTTFFFTTTTFFFFFFFFFFFTTTTTTTTTTTFFFTTTFFTTFFTTFFTTFFFFFFFFTTTTTFFTTTTTTTFFFFFFFFFTTTTTTTTTTTTTTTFFFFFFTTTFFFFTTTTFFFTTTTTTTTFFFFFFFFFFFFFFFFFFFFFTTTFFFFFFFFFFTTTTFFFFFFFFFFTTTFFFFFFFFFFTTFFFFFFTTTTTTTTTTFFFFFFFTTTTTFFFFTTTTTTTTTTTTTFFFFFFFFF" /* FF */ => Some("3. D  "),
        "TTTFFFFFFFFTTTTFFTTTFFFFFFFFFFFFFTTTTTFFFFTTFFTTTTTTTFFFFTTFFTTFFFFFFFFTTTTTTTTTTFFFFTTTTTTTTTFFFFFFFFFFFFFFFFFFFFFFFFTTFFFFFTTFFFFFFTTFFFTTTTFFFFFFTTTTTFFTTTFFFTTTTTFFFFFFFTTTFFFFTTTTTFFFFFTTTTTFFFFFFFFFFFFFFFFFFFFFFTTTTTTTTTFFTTFFFFFFTTFFTTFFFFFFFFFFTTTTTTTTTTTTTTTTFFTTTTTTFFFFFFFFFTTTTTTFFTTTTFFFTTTTTTTTFFTTFFTTFFFFFTTFFFTTTTTTTFFTTTFFTTTTTTTTTTTTTTTTTTFFFFFFFTTTFFFFFFFFTTTTTTFFFFFTTFFTTFFFFFFFFFFFFTTTTTTTTTTTTTFFFFFTTTTTFFFFFFFTTTTFFFFFFTTTFFFFFFFFFFTTTTTTFFFFTTTTTTFFTTTTTTTTFFFFTTTFFFFFTTFFFFFFFFFFFFFFFFFTTTTFFFFFTTTTTTTFFFFFTTFFFFFTTTTFFFFFFTTTFFFFFTTTTTFFFFTTFFFFFFFFFFTTFFFFFFFFFTTTTTTTTFFFFFFFFFFFFFFFFFFTTTTFFFFFFFFFFFFFFTTTFFFFFTTTTTTTTTTTTTTTTTFFFFFFFFFFFFFFFFFFFFFTTTFFTTTTTTTFFTTTTTTTTTTTTTTTFFTTTTTTTTFFTTTTTTTTTTTTTTTTTTTTTTFFFFFFFTTFFFFFTTTFFFFTTTTTTTTTTTFFFFFFFFFFFTTTFFFTTFFTTFFTTFFTTTTTTTTFFFFFTTFFFFFFFTTTTTTTTTFFFFFFFFFFFFFFFTTTTTTFFFTTTTFFFFTTTFFFFFFFFTTTTTTTTTTTTTTTTTTTTTFFFTTTTTTTTTTFFFFTTTTTTTTTTFFFTTTTTTTTTTFFTTTTTTFFFFFFFFFFTTTTTTTFFFFFTTTTFFFFFFFFFFFFFTTTTTTTTT" /* TT */ => Some("4. Dn "),
        "FFFTTTTFFFFFFFFTTFFFTTTTTFFFTTTFFFFFFFTTFFFFTTFFFFFFFTTFFFFTTFFTTTFTTTTFFFFFFFFFFTTTTFFFFFFFFFTTFTTTTTTTTTTFFFFFFFFFTTFFTTTFFFFTTFFFFFFTTTFFFFTTTTFFFFFFFTTFFFTTTFFFFFTTTTFTTFFFTTTTFFFFFTTTTTFFFFFTTTTFFFFFTTTTTFFFTTTFFFFFFFFFFFTTFFTTTTFFFFTTFFTTTTTFTTTTFFFFFFFFFFFFFFFFTTFFFFFFTTTFFFTTTFFFFFFTTFFFFTTTFFFFFFFFTTFFTTFFTTTFFFFTTTFFFFFFFTTFFFTTFFFFFFFFFFFFFFFFFFTTTTFTTFFFTTFFFFFFFFFFFFTTTTTFFTTFFTTTFFFTTTTTTFFFFFFFFFFFFFTTFTTFFFFFTTFTTTTFFFFTTTTFFFFFTTFFFFFTTTFFFFFFTTFFFFFFFFTTFFFFFFFFTTFFFFFTTTFFFFTTFTTFTTFTTTTFFFFFFFFTTTTTFFFFFFFTTFTTFFTTTFFFFFFTTFTTTFFFTTTTTFFFFFTTTTFFTTTTTTTTFFFFTTTFFFFFFFFFFFFFFTTTTFTTTFTTTTFFFTTFFFFTTTTTTTTFTTTTTFFFTTTTTFFFFFFFFFFFFFFFFFTTFFFFFFFFFTTTFTTTFTTFFFTTFFFFFFFTTFFFFFFFFFFFFFFFTTFFFFFFFFTTFFFFFFFFFFFFFFFFFFFFFFTTTFFFFFFTTFTTFFFTTTTFFFFFFFFFFFTTFTTTTTTTTFFFTTTFFTTFFTTFFTTFFFFFFFFTTTTTFFTTFTTTTFFFFFFFFFTTTFFFTTTTTTTTTFFFFFFTTTFFFFTTTTFFFTTFTTFTTFFFFFFFFFFFFFFFFFFFFFTTTFFFFFFFFFFTTFFFFFFFFFFFFTTTFFFFFFFFFFTTFFFFFFTTFTTFFFTTFFFFFFFTTTTTFFFFTTTFTTTTFTTTTFFFFFFFFF" /* FF */ => Some("5. R1 "),
        "TTTFFFFTTTTTTTTFFTTTFFFFFTTTFFFTTTTTTTFFTTTTFFTTTTTTTFFTTTTFFTTFFFTFFFFTTTTTTTTTTFFFFTTTTTTTTTFFTFFFFFFFFFFTTTTTTTTTFFTTFFFTTTTFFTTTTTTFFFTTTTFFFFTTTTTTTFFTTTFFFTTTTTFFFFTFFTTTFFFFTTTTTFFFFFTTTTTFFFFTTTTTFFFFFTTTFFFTTTTTTTTTTTFFTTFFFFTTTTFFTTFFFFFTFFFFTTTTTTTTTTTTTTTTFFTTTTTTFFFTTTFFFTTTTTTFFTTTTFFFTTTTTTTTFFTTFFTTFFFTTTTFFFTTTTTTTFFTTTFFTTTTTTTTTTTTTTTTTTFFFFTFFTTTFFTTTTTTTTTTTTFFFFFTTFFTTFFFTTTFFFFFFTTTTTTTTTTTTTFFTFFTTTTTFFTFFFFTTTTFFFFTTTTTFFTTTTTFFFTTTTTTFFTTTTTTTTFFTTTTTTTTFFTTTTTFFFTTTTFFTFFTFFTFFFFTTTTTTTTFFFFFTTTTTTTFFTFFTTFFFTTTTTTFFTFFFTTTFFFFFTTTTTFFFFTTFFFFFFFFTTTTFFFTTTTTTTTTTTTTTFFFFTFFFTFFFFTTTFFTTTTFFFFFFFFTFFFFFTTTFFFFFTTTTTTTTTTTTTTTTTFFTTTTTTTTTFFFTFFFTFFTTTFFTTTTTTTFFTTTTTTTTTTTTTTTFFTTTTTTTTFFTTTTTTTTTTTTTTTTTTTTTTFFFTTTTTTFFTFFTTTFFFFTTTTTTTTTTTFFTFFFFFFFFTTTFFFTTFFTTFFTTFFTTTTTTTTFFFFFTTFFTFFFFTTTTTTTTTFFFTTTFFFFFFFFFTTTTTTFFFTTTTFFFFTTTFFTFFTFFTTTTTTTTTTTTTTTTTTTTTFFFTTTTTTTTTTFFTTTTTTTTTTTTFFFTTTTTTTTTTFFTTTTTTFFTFFTTTFFTTTTTTTFFFFFTTTTFFFTFFFFTFFFFTTTTTTTTT" /* TT */ => Some("6. R1n"),
        "FFFTTTTFFFFFFFFTTFFFTTTTTFFFTTTFFFFFFFTTFFFFTTFFFFFFFTTFFFFTTFFTTTTTTTTFFFFFFFFFFTTTTFFFFFFFFFTTTTTTTTTTTTTFFFFFFFFFTTFFTTTFFFFTTFFFFFFTTTFFFFTTTTFFFFFFFTTFFFTTTFFFFFTTTTTTTFFFTTTTFFFFFTTTTTFFFFFTTTTFFFFFTTTTTFFFTTTFFFFFFFFFFFTTFFTTTTFFFFTTFFTTTTTTTTTTFFFFFFFFFFFFFFFFTTFFFFFFTTTFFFTTTFFFFFFTTFFFFTTTFFFFFFFFTTFFTTFFTTTFFFFTTTFFFFFFFTTFFFTTFFFFFFFFFFFFFFFFFFTTTTTTTFFFTTFFFFFFFFFFFFTTTTTFFTTFFTTTFFFTTTTTTFFFFFFFFFFFFFTTTTTFFFFFTTTTTTTFFFFTTTTFFFFFTTFFFFFTTTFFFFFFTTFFFFFFFFTTFFFFFFFFTTFFFFFTTTFFFFTTTTTTTTTTTTTFFFFFFFFTTTTTFFFFFFFTTTTTFFTTTFFFFFFTTTTTTFFFTTTTTFFFFFTTTTFFTTTTTTTTFFFFTTTFFFFFFFFFFFFFFTTTTTTTTTTTTTFFFTTFFFFTTTTTTTTTTTTTTFFFTTTTTFFFFFFFFFFFFFFFFFTTFFFFFFFFFTTTTTTTTTTFFFTTFFFFFFFTTFFFFFFFFFFFFFFFTTFFFFFFFFTTFFFFFFFFFFFFFFFFFFFFFFTTTFFFFFFTTTTTFFFTTTTFFFFFFFFFFFTTTTTTTTTTTFFFTTTFFTTFFTTFFTTFFFFFFFFTTTTTFFTTTTTTTFFFFFFFFFTTTFFFTTTTTTTTTFFFFFFTTTFFFFTTTTFFFTTTTTTTTFFFFFFFFFFFFFFFFFFFFFTTTFFFFFFFFFFTTFFFFFFFFFFFFTTTFFFFFFFFFFTTFFFFFFTTTTTFFFTTFFFFFFFTTTTTFFFFTTTTTTTTTTTTTFFFFFFFFF" /* FF */ => Some("7. R2 "),
        "TTTFFFFTTTTTTTTFFTTTFFFFFTTTFFFTTTTTTTFFTTTTFFTTTTTTTFFTTTTFFTTFFFFFFFFTTTTTTTTTTFFFFTTTTTTTTTFFFFFFFFFFFFFTTTTTTTTTFFTTFFFTTTTFFTTTTTTFFFTTTTFFFFTTTTTTTFFTTTFFFTTTTTFFFFFFFTTTFFFFTTTTTFFFFFTTTTTFFFFTTTTTFFFFFTTTFFFTTTTTTTTTTTFFTTFFFFTTTTFFTTFFFFFFFFFFTTTTTTTTTTTTTTTTFFTTTTTTFFFTTTFFFTTTTTTFFTTTTFFFTTTTTTTTFFTTFFTTFFFTTTTFFFTTTTTTTFFTTTFFTTTTTTTTTTTTTTTTTTFFFFFFFTTTFFTTTTTTTTTTTTFFFFFTTFFTTFFFTTTFFFFFFTTTTTTTTTTTTTFFFFFTTTTTFFFFFFFTTTTFFFFTTTTTFFTTTTTFFFTTTTTTFFTTTTTTTTFFTTTTTTTTFFTTTTTFFFTTTTFFFFFFFFFFFFFTTTTTTTTFFFFFTTTTTTTFFFFFTTFFFTTTTTTFFFFFFTTTFFFFFTTTTTFFFFTTFFFFFFFFTTTTFFFTTTTTTTTTTTTTTFFFFFFFFFFFFFTTTFFTTTTFFFFFFFFFFFFFFTTTFFFFFTTTTTTTTTTTTTTTTTFFTTTTTTTTTFFFFFFFFFFTTTFFTTTTTTTFFTTTTTTTTTTTTTTTFFTTTTTTTTFFTTTTTTTTTTTTTTTTTTTTTTFFFTTTTTTFFFFFTTTFFFFTTTTTTTTTTTFFFFFFFFFFFTTTFFFTTFFTTFFTTFFTTTTTTTTFFFFFTTFFFFFFFTTTTTTTTTFFFTTTFFFFFFFFFTTTTTTFFFTTTTFFFFTTTFFFFFFFFTTTTTTTTTTTTTTTTTTTTTFFFTTTTTTTTTTFFTTTTTTTTTTTTFFFTTTTTTTTTTFFTTTTTTFFFFFTTTFFTTTTTTTFFFFFTTTTFFFFFFFFFFFFFTTTTTTTTT" /* TT */ => Some("8. R2n"),
        "FTTTTTTTTTTFFTTTTFFFTTTTTTTTTTTTTFFTFFTTTTFFTTFFFFFFFTTTTFFTTFFTTTTTTTTFFTFFTFFFFTTTTFFFTFFFFFTTTTTTTTTTTTTTTTTTTTTTTTFFTTTTTFFTTTTTTFFTTTFFTTTTTTTTFFTFFTTFFFTTTFFFFFTTTTTTTFFFTTTTFFFTTTTTTTFFFFFTTTTTTTTTTTTTTTTTTTTTTFFFFTTTFFTTFFTTTTTTFFTTFFTTTTTTTTTTFFFFFFFTTTFFTFFFTTFFTFFFTTTTTTTTTFFFFFFTTFFFFTTTFFFTFFFFTTFFTTFFTTTTTFFTTTFFFFFFFTTFFFTTFFTTTTTFFFFTTTFFTTTTTTTTTFFFTTTTTTTTFFFFFFTTTTTFFTTFFTTTTTTTTTTTTFFFFTTTFFFFTTTTTTTFFFTTTTTTTTTFFTTTTTTTTFFFTTTTTTTTTTFFFFTTTTTTFFFFFFTTFFFFFTFFTTTTFFFTTTTTFFTTTTTTTTTTTTTTTTTFFFFTTTTTFFTFFFFTTTTTFFTTTTTFFTTTTTTTTFFFTTTTTFFFTTTTTTFFTTTTTTTTTTFFTTTTTTTTTFFTTTFFFTTTTTTTTTTTTTTTTTTFFFFTTTTTTTTTTTTTTFFFTTTTTFFTFFFFTTTFFFFFTTTTTTTTTTTTTTTTTTTTTTTFFFTTFFTFFFFTTFFFTFFFTFFTFFTTTTFFTTTTTTTTFFFTFFFFFTFFFTFFFFTFFFTTTTTTTFFTTTTTFFFTTTTFFTFFFFFFTTTTTTTTTTTTTFFFTTTFFTTFFTTFFTTFFFFFFFFTTTTTFFTTTTTTTFFTFFFTFFTTTTTTTTTTTTTTTFFFTFFTTTFFTTTTTTFFFTTTTTTTTFFTTTTTFFFFFFTFFFFFTTTTTFFFFTFFFTTTTTTFFTFFTFFFFTTTFFFFFTFFFFTTFFFFFFTTTTTTTTTTFFFTFFFTTTTTFFTTTTTTTTTTTTTTTFFFTFFFFF" /* TT */ => Some("9. F1 "),
        "TFFFFFFFFFFTTFFFFTTTFFFFFFFFFFFFFTTFTTFFFFTTFFTTTTTTTFFFFTTFFTTFFFFFFFFTTFTTFTTTTFFFFTTTFTTTTTFFFFFFFFFFFFFFFFFFFFFFFFTTFFFFFTTFFFFFFTTFFFTTFFFFFFFFTTFTTFFTTTFFFTTTTTFFFFFFFTTTFFFFTTTFFFFFFFTTTTTFFFFFFFFFFFFFFFFFFFFFFTTTTFFFTTFFTTFFFFFFTTFFTTFFFFFFFFFFTTTTTTTFFFTTFTTTFFTTFTTTFFFFFFFFFTTTTTTFFTTTTFFFTTTFTTTTFFTTFFTTFFFFFTTFFFTTTTTTTFFTTTFFTTFFFFFTTTTFFFTTFFFFFFFFFTTTFFFFFFFFTTTTTTFFFFFTTFFTTFFFFFFFFFFFFTTTTFFFTTTTFFFFFFFTTTFFFFFFFFFTTFFFFFFFFTTTFFFFFFFFFFTTTTFFFFFFTTTTTTFFTTTTTFTTFFFFTTTFFFFFTTFFFFFFFFFFFFFFFFFTTTTFFFFFTTFTTTTFFFFFTTFFFFFTTFFFFFFFFTTTFFFFFTTTFFFFFFTTFFFFFFFFFFTTFFFFFFFFFTTFFFTTTFFFFFFFFFFFFFFFFFFTTTTFFFFFFFFFFFFFFTTTFFFFFTTFTTTTFFFTTTTTFFFFFFFFFFFFFFFFFFFFFFFTTTFFTTFTTTTFFTTTFTTTFTTFTTFFFFTTFFFFFFFFTTTFTTTTTFTTTFTTTTFTTTFFFFFFFTTFFFFFTTTFFFFTTFTTTTTTFFFFFFFFFFFFFTTTFFFTTFFTTFFTTFFTTTTTTTTFFFFFTTFFFFFFFTTFTTTFTTFFFFFFFFFFFFFFFTTTFTTFFFTTFFFFFFTTTFFFFFFFFTTFFFFFTTTTTTFTTTTTFFFFFTTTTFTTTFFFFFFTTFTTFTTTTFFFTTTTTFTTTTFFTTTTTTFFFFFFFFFFTTTFTTTFFFFFTTFFFFFFFFFFFFFFFTTTFTTTTT" /* FF */ => Some("A. F1n"),
ome("B. F2 "),
        "TFFFFFFFFFFTTFFFFTTTFFFFFFFFFFFFFTTTTTFFFFTTFFTTTTTTTFFFFTTFFTTFFFFFFFFTTTTTTTTTTFFFFTTTTTTTTTFFFFFFFFFFFFFFFFFFFFFFFFTTFFFFFTTFFFFFFTTFFFTTFFFFFFFFTTTTTFFTTTFFFTTTTTFFFFFFFTTTFFFFTTTFFFFFFFTTTTTFFFFFFFFFFFFFFFFFFFFFFTTTTFFFTTFFTTFFFFFFTTFFTTFFFFFFFFFFTTTTTTTFFFTTTTTTFFTTTTTTFFFFFFFFFTTTTTTFFTTTTFFFTTTTTTTTFFTTFFTTFFFFFTTFFFTTTTTTTFFTTTFFTTFFFFFTTTTFFFTTFFFFFFFFFTTTFFFFFFFFTTTTTTFFFFFTTFFTTFFFFFFFFFFFFTTTTFFFTTTTFFFFFFFTTTFFFFFFFFFTTFFFFFFFFTTTFFFFFFFFFFTTTTFFFFFFTTTTTTFFTTTTTTTTFFFFTTTFFFFFTTFFFFFFFFFFFFFFFFFTTTTFFFFFTTTTTTTFFFFFTTFFFFFTTFFFFFFFFTTTFFFFFTTTFFFFFFTTFFFFFFFFFFTTFFFFFFFFFTTFFFTTTFFFFFFFFFFFFFFFFFFTTTTFFFFFFFFFFFFFFTTTFFFFFTTTTTTTFFFTTTTTFFFFFFFFFFFFFFFFFFFFFFFTTTFFTTTTTTTFFTTTTTTTTTTTTTFFFFTTFFFFFFFFTTTTTTTTTTTTTTTTTTTTTTFFFFFFFTTFFFFFTTTFFFFTTTTTTTTTFFFFFFFFFFFFFTTTFFFTTFFTTFFTTFFTTTTTTTTFFFFFTTFFFFFFFTTTTTTTTTFFFFFFFFFFFFFFFTTTTTTFFFTTFFFFFFTTTFFFFFFFFTTFFFFFTTTTTTTTTTTTFFFFFTTTTTTTTFFFFFFTTTTTTTTTTFFFTTTTTTTTTTFFTTTTTTFFFFFFFFFFTTTTTTTFFFFFTTFFFFFFFFFFFFFFFTTTTTTTTT" /* FF */ => Some("C. F2n"),
    _ => None
    }
}
